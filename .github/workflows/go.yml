name: secretsyncer

on:
  push:
    branches: [master, main]
    tags:
      - "v*"
  pull_request:
    branches: [master, main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Run coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Build
        run: |
          env GOOS=linux GOARCH=amd64 go build -o dist/secretsyncer-linux-amd64-${{ steps.get_version.outputs.VERSION }} .

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: secretsyncer-linux-amd64-${{ steps.get_version.outputs.VERSION }}
          path: dist/secretsyncer-linux-amd64-${{ steps.get_version.outputs.VERSION }}
